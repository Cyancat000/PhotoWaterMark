<template>
  <div class="canvas-container">
    <div class="canvas-panel">
      <v-stage ref="stageRef" :config="stageSize">
        <v-layer ref="layer">
          <v-circle :config="circleConfig" />
          <v-image :config="{
            x: 200,
            y: 50,
            image: vaderImage,
            scaleX: 0.5,
            scaleY: 0.5,
            cornerRadius: 20
          }" />
        </v-layer>
      </v-stage>
    </div>
    <div class="custom-panel">
      <n-space>
        <n-upload accept="image/*" @change="handleUpload">
          <n-button type="primary">
            上传图片
          </n-button>
        </n-upload>
        <n-button @click="handleExport" type="primary">
          下载图片
        </n-button>
      </n-space>
    </div>
  </div>
</template>


<script setup lang="ts">
import { ref, reactive, onMounted } from "vue"
import { NButton, NSpace, NUpload } from "naive-ui"
import { useImage } from 'vue-konva';
import * as exif from "fast-exif"

const stageSize = {
  width: document.documentElement.clientWidth * 0.4,
  height: document.documentElement.clientWidth * 0.35
};



const stageRef: any = ref(null)

const layer = ref(null)

console.log(layer.add)

var vaderImage = reactive(useImage('https://konvajs.org/assets/yoda.jpg')[0])


const circleConfig = {
  x: 50,
  y: 50,
  radius: 20,
  fill: "red",
}

const handleUpload = (file: any) => {
  let reader = new FileReader();

  reader.readAsDataURL(file.file.file);

  reader.onload = function () {
    if(typeof(reader.result) == 'string'){
      const img = new Image()

      img.onload = ()=>{
        var vaderImage = useImage('https://konvajs.org/assets/darth-vader.jpg')[0]
        // 但是当我的图片上传完成之执行同样的JS语句却失效了，并且经测试下面的console.log是被执行的。
        console.log(vaderImage)
      }

      img.src = reader.result;
    }
  }

  reader.onerror = function () {
    console.log(reader.error);
  };

}

const handleExport = () => {
  // get data URL with default settings
  const dataURL = stageRef.value.getNode().toDataURL();

  // open in new window
  const win: any = window.open();
  win.document.write(`<img src="${dataURL}" alt="Stage"/>`);

  // you can also save with different settings
  const jpegURL = stageRef.value.getNode().toDataURL({
    mimeType: 'image/jpeg',
    quality: 0.8
  });
  console.log('JPEG URL:', jpegURL);
};

onMounted(() => {
  console.log(exif)
});
</script>

<style scoped>
.canvas-container {
  width: 80vw;
  height: 35vw;
  background: #8888;
  display: flex;
}

.custom-panel {
  width: 40vw;
  height: 35vw;
  background-color: aquamarine;
}

.canvas-panel {
  height: 35vw;
  width: 40vw;
}
</style>